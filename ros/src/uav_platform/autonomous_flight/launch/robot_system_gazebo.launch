<launch>
    <!-- arguments -->
	<arg name="verbose" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="debug" default="false" />
    <arg name="gazebo_gui" default="false"/>
    <arg name="use_keyboard" default="false"/>
	<arg name="quadcopterX" default="0"/>
  	<arg name="quadcopterY" default="0"/>
  	<arg name="quadcopterZ" default="1.0"/>
  	<arg name="quadcopterYaw" default="0"/>
	<arg name="realtime_factor_falco" default="1.0"/>
    <!-- <arg name="world_name" default="false" /> -->


	<!-- start gazebo world -->
	<include file="$(find uav_simulator)/launch/start.launch" >
        <!-- <arg name="world_name" value="$(arg world_name)"/> -->
        <arg name="verbose" value="$(arg verbose)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="debug" value="$(arg debug)" />
        <arg name="gazebo_gui" value="$(arg gazebo_gui)" />
	    <arg name="use_keyboard" value="$(arg use_keyboard)"/>
		<arg name="quadcopterX" value="$(arg quadcopterX)"/>
  	    <arg name="quadcopterY" value="$(arg quadcopterY)"/>
  	    <arg name="quadcopterYaw" value="$(arg quadcopterYaw)"/>
    </include> 
	
	<!-- start dynamic uniform graph generator -->
	<include file="$(find autonomous_flight)/launch/test_dynamic_ug.launch" /> 
	
	<!-- start dynamic PRM generator -->
	<!-- <include file="$(find autonomous_flight)/launch/test_dynamic_prm.launch" />  -->
	
	<!-- start local planner -->
	<include file="$(find falco_planner)/launch/run_falco_planner.launch" >
		<arg name="realtime_factor" value="$(arg realtime_factor_falco)"/>
		<arg name="use_builtin_rviz" value="false"/>
        <arg name="vehicleX" value="$(arg quadcopterX)"/>
        <arg name="vehicleY" value="$(arg quadcopterY)"/>
        <arg name="vehicleZ" value="$(arg quadcopterZ)"/>
        <arg name="vehicleYaw" value="$(arg quadcopterYaw)"/>
    </include> 

	
	<!-- start rviz visualizer -->
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find rviz_visualize)/rviz/decision_graph.rviz" required="true"/>
</launch> 