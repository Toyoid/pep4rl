world:
  height: 21  # the height of the world
  width: 21   # the height of the world
  step_time: 0.1  # 10Hz calculate each step
  sample_time: 0.05  # 10 Hz for render and data extraction
  offset: [-10.5, -10.5] # the offset of the world on x and y


robots:
  type: 'robot_diff'  # # robot_omni, robot_diff, robot_acker
  number: 1
  state: [-9.5, 9, 0]
  radius: 0.2 # # for diff (default)
  goal: [-9.500, -9.000, 0]
  acce: [1, .inf]   # steer, angular or v_x, v_y

  # for multiple robots number>1
  # distribute: {mode: 'circular', shapes: [0.2], circle: [5, 5, 4], random_bear: False, random_shape: False, radius_low: 0.1, radius_high: 1}
  # distribute: {mode: 'random', rlow: [0, 0, 0], rhigh: [10, 10, 3.14], distance: 1, shapes: [0.2], random_shape: False, radius_low: 0.1, radius_high: 0.5}
  distribute: {mode: 'manual', states: [[1, 1, 0], [2, 1, 0]], shapes: [0.2, 0.2], goals: [[7, 7, 0], [7, 2, 0]], random_bear: False}

  # sensor
  sensor:
    - type: 'lidar'
      # id: 0  # only id robot has
      range_min: 0
      range_max: 5
      angle_range: 3.1415926  # 6.2831853 3.1415926 3.6651914 (7/6 * pi)  3.3161255 (19/18 * pi)
      number: 7
      noise: False
      std: 1
      angle_std: 0.2
      offset: [0, 0, 0]
      reso: 5
      alpha: 0.3

obstacles:
#  - type: 'obstacle_circle'
#    number: 0
#    distribute: {mode: 'random', shapes: [0.2], rlow: [0, 0], rhigh: [10, 10], distance: 1, random_shape: False, shapes_low: 0.1, shapes_high: 1}
#    # distribute: {mode: 'manual', states: [[1, 1], [2, 1]], shapes: [0.5, 0.2]}  # shapes: radiuses
#
#  - type: 'obstacle_block'
#    number: 0
#    # shapes: [[length, width]]
#    distribute: {mode: 'random', rlow: [0.0, 0.0, -3.14], rhigh: [10.0, 10.0, 3.14], distance: 1, shapes: [[0.5, 0.4], [0.4, 0.2]], random_shape: True, shapes_low: [0.1, 0.1], shapes_high: [0.8, 0.8]}
#    # distribute: {mode: 'manual', states: [ [4, 4, 1], [3, 6, 0] ], shapes: [[0.3, 0.3], [0.5, 0.4]]}
#
#  - type: 'obstacle_line'
#    number: 0
#    # distribute: {mode: 'random', rlow: [0.0, 0.0, -3.14], rhigh: [10.0, 10.0, 3.14], distance: 1, shapes: [[0.5, 0.4], [0.4, 0.2]], random_shape: True, shapes_low: [0.1, 0.1], shapes_high: [0.8, 0.8]}
#    distribute: {mode: 'manual', states: [ [0, 0, 0], [0, 0, 1.57], [10, 10, -3.14], [10, 10, -1.57], [5, 5, 1.04] ], shapes: [[10, 0.2]]}

  - type: 'obstacle_polygon'
    number: 35
    distribute: { mode: 'manual',
                  states:
                    [ [ 0, 0, 0 ], [ 0, 0, 0 ],
                    [ 0, 0, 0 ], [ 0, 0, 0 ],
                    [ 0, 0, 0 ], [ 0, 0, 0 ],
                    [ 0, 0, 0 ], [ 0, 0, 0 ],
                    [ 0, 0, 0 ], [ 0, 0, 0 ],
                    [ 0, 0, 0 ], [ 0, 0, 0 ],
                    [ 0, 0, 0 ], [ 0, 0, 0 ],
                    [ 0, 0, 0 ], [ 0, 0, 0 ],
                    [ 0, 0, 0 ], [ 0, 0, 0 ],
                    [ 0, 0, 0 ], [ 0, 0, 0 ],
                    [ 0, 0, 0 ], [ 0, 0, 0 ],
                    [ 0, 0, 0 ], [ 0, 0, 0 ],
                    [ 0, 0, 0 ], [ 0, 0, 0 ],
                    [ 0, 0, 0 ], [ 0, 0, 0 ],
                    [ 0, 0, 0 ], [ 0, 0, 0 ],
                    [ 0, 0, 0 ], [ 0, 0, 0 ],
                    [ 0, 0, 0 ], [ 0, 0, 0 ],
                    [ 0, 0, 0 ],
                    ],
                  shapes:
                    [ [[-10, -5], [-6, -5], [-6, -5.5], [-10, -5.5]],
                    [[-5.5, -6], [-5, -6], [-5, -10], [-5.5, -10]],
                    [[-3, -5], [4, -5], [4, -6], [-3, -6]],
                    [[6, -6], [10, -6], [10, -7], [6, -7]],
                    [[-6, -2], [-5, -2], [-5, -3], [-6, -3]],
                    [[-9.25, 1], [-4, 1], [-4, 0], [-9.25, 0]],
                    [[-7, 5], [-5, 5], [-5, 3], [-7, 3]],
                    [[-7, 7], [-3, 7], [-3, 5], [-7, 5]],
                    [[0, 7], [1, 5], [-1, 5]],
                    [ [4, 6], [5, 7], [6, 6], [5, 5] ],
                    [ [4.5, 7.5], [5.5, 8.5], [6.5, 7.5], [5.5, 6.5]],
                    [[6.5, 8], [8, 8], [8, 6.5], [6.5, 6.5]],
                    [ [5, 4], [5.5, 4], [5.5, 2.75], [5, 2.75]],
                    [ [5.5, 4], [9, 4], [9, 3.5], [5.5, 3.5] ],
                    [ [5, 1.5], [5.5, 1.5], [5.5, -1.5], [5, -1.5] ],
                    [ [5.5, 0.5], [8, 0.5], [8, -0.5], [5.5, -0.5] ],
                    [ [5, -2.75], [5.5, -2.75], [5.5, -4], [5, -4] ],
                    [ [-3, 3], [1.5, 3], [0, 1], [-3, 1] ],
                    [ [1, 0], [3, 2], [3, -2] ],
                    [ [-3, -3], [1.5, -3], [0, -1], [-3, -1] ],
                    [ [-1, -8], [1, -8], [0, -10] ],
                    [ [-8, -7], [-7, -7], [-7, -8], [-8, -8] ],
                    [ [-8, -1.75], [-6, -1.75], [-6, -2.75], [-8, -2.75] ],
                    [ [3, -8], [4, -7], [4.5, -7.5], [3.5, -8.5] ],
                    [ [-5, -4], [-4, -4], [-4, -5], [-5, -5] ],
                    [ [-2, 9.5], [-1.5, 10], [-0.5, 9], [-1, 8.5] ],
                    [ [-10, 8], [-9, 8], [-9, 6], [-10, 6] ],
                    [ [-6, 10], [-4, 10], [-4, 9], [-6, 9] ],
                    [ [1, 9], [3, 9], [2, 7] ],
                    [ [3.5, 4], [4, 3.5], [3.5, 3], [3, 3.5] ],
                    [ [3.2, -3], [4, -3.2], [3.8, -4], [3, -3.8] ],
                    [[-10, 10], [-10.5, 10], [-10.5, -10.5], [-10, -10.5]],
                    [[-10, -10], [-10, -10.5], [10.5, -10.5], [10.5, -10]],
                    [[10, -10], [10.5, -10], [10.5, 10.5], [10, 10.5]],
                    [[-10.5, 10], [-10.5, 10.5], [10, 10.5], [10, 10]],
                    ]
                }
